<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wangyw Blog</title>
    <description>Java Android</description>
    <link>http://johnnwen.github.io/</link>
    <atom:link href="http://johnnwen.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 01 Apr 2016 16:29:41 +0800</pubDate>
    <lastBuildDate>Fri, 01 Apr 2016 16:29:41 +0800</lastBuildDate>
    <generator>Jekyll v3.1.2</generator>
    
      <item>
        <title>leetcode 188</title>
        <description>&lt;h1 id=&quot;best-time-to-buy-and-sell-stock-iv&quot;&gt;Best Time to Buy and Sell Stock IV&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;题意：用一个数组表示股票每天的价格，数组的第i个数表示股票在第i天的价格。最多交易k次，手上最多只能持有一支股票，求最大收益 #### 代码
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;c++&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class Solution {
public:
    int maxProfit(int k, vector&amp;lt;int&amp;gt;&amp;amp; prices) {
        if(prices.size() &amp;lt; 2)
            return 0;
        
        if(k &amp;gt;= prices.size())
            return maxProfit2(prices);
        
        int n = prices.size();
        vector&amp;lt;int&amp;gt; temp(k+1,0);
        vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; local(n,temp);
        vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; globle(n,temp);
        for(int i = 1;i&amp;lt;n;i++){
            int diff = prices[i] - prices[i-1];
            for(int j = 1;j&amp;lt;=k;j++){
                local[i][j] = max(globle[i-1][j-1]+diff,local[i-1][j] + diff);
                globle[i][j] = max(globle[i-1][j],local[i][j]);
            }
        }
        return globle[n-1][k];
    }
    
    int maxProfit2(vector&amp;lt;int&amp;gt; &amp;amp;prices){
        int maxProfit = 0;
        for(int i = 1;i&amp;lt;prices.size();i++){
            int gas = prices[i] - prices[i-1];
            if(gas &amp;gt; 0){
                maxProfit += gas;
            }
        }
        return maxProfit;

        
    }
};
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;##分析
用local[i][j]表示到达第i天时，最多进行j次交易的局部最优解；用global[i][j]表示到达第i天时，最多进行j次的全局最优解。它们二者的关系如下（其中diff = prices[i] – prices[i – 1]）：&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;local[i][j] = max(globle[i-1][j-1]+diff,local[i-1][j] + diff);
globle[i][j] = max(globle[i-1][j],local[i][j]);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 31 Mar 2016 20:00:00 +0800</pubDate>
        <link>http://johnnwen.github.io/2016/03/31/stockvi/</link>
        <guid isPermaLink="true">http://johnnwen.github.io/2016/03/31/stockvi/</guid>
        
        <category>算法</category>
        
        <category>leetcode</category>
        
        <category>动态规划</category>
        
        <category>c++</category>
        
        
      </item>
    
      <item>
        <title>helloMyBlog</title>
        <description>&lt;h1 id=&quot;hellomyblog&quot;&gt;HelloMyBlog&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;
using namespace std;

int main()
{
    cout &amp;lt;&amp;lt; &quot;Hello MyBlog&quot; &amp;lt;&amp;lt; endl;

    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Thu, 31 Mar 2016 18:00:00 +0800</pubDate>
        <link>http://johnnwen.github.io/2016/03/31/hellomyblog/</link>
        <guid isPermaLink="true">http://johnnwen.github.io/2016/03/31/hellomyblog/</guid>
        
        <category>测试</category>
        
        
      </item>
    
  </channel>
</rss>
